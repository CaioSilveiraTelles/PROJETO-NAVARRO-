// <auto-generated />
using System;
using BlazorCRUDApp.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorCRUDApp.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlazorCRUDApp.Shared.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biography");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Name = "Person 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Person 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Person 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Person 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Person 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Person 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Person 12"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Person 13"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Person 14"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Person 15"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Person 16"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Person 17"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Person 18"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Person 19"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Person 20"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Person 21"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Person 22"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Person 23"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Person 24"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Person 25"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Person 26"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Person 27"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Person 28"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Person 29"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Person 30"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Person 31"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Person 32"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Person 33"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Person 34"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Person 35"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Person 36"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Person 37"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Person 38"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Person 39"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Person 40"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Person 41"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Person 42"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Person 43"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Person 44"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Person 45"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Person 46"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Person 47"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Person 48"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Person 49"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Person 50"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Person 51"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Person 52"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Person 53"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Person 54"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Person 55"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Person 56"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Person 57"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Person 58"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Person 59"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Person 60"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Person 61"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Person 62"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Person 63"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Person 64"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Person 65"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Person 66"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Person 67"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Person 68"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Person 69"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Person 70"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Person 71"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Person 72"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Person 73"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Person 74"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Person 75"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Person 76"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Person 77"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Person 78"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Person 79"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Person 80"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Person 81"
                        },
                        new
                        {
                            Id = 82,
                            Name = "Person 82"
                        },
                        new
                        {
                            Id = 83,
                            Name = "Person 83"
                        },
                        new
                        {
                            Id = 84,
                            Name = "Person 84"
                        },
                        new
                        {
                            Id = 85,
                            Name = "Person 85"
                        },
                        new
                        {
                            Id = 86,
                            Name = "Person 86"
                        },
                        new
                        {
                            Id = 87,
                            Name = "Person 87"
                        },
                        new
                        {
                            Id = 88,
                            Name = "Person 88"
                        },
                        new
                        {
                            Id = 89,
                            Name = "Person 89"
                        },
                        new
                        {
                            Id = 90,
                            Name = "Person 90"
                        },
                        new
                        {
                            Id = 91,
                            Name = "Person 91"
                        },
                        new
                        {
                            Id = 92,
                            Name = "Person 92"
                        },
                        new
                        {
                            Id = 93,
                            Name = "Person 93"
                        },
                        new
                        {
                            Id = 94,
                            Name = "Person 94"
                        },
                        new
                        {
                            Id = 95,
                            Name = "Person 95"
                        },
                        new
                        {
                            Id = 96,
                            Name = "Person 96"
                        },
                        new
                        {
                            Id = 97,
                            Name = "Person 97"
                        },
                        new
                        {
                            Id = 98,
                            Name = "Person 98"
                        },
                        new
                        {
                            Id = 99,
                            Name = "Person 99"
                        },
                        new
                        {
                            Id = 100,
                            Name = "Person 100"
                        },
                        new
                        {
                            Id = 101,
                            Name = "Person 101"
                        },
                        new
                        {
                            Id = 102,
                            Name = "Person 102"
                        },
                        new
                        {
                            Id = 103,
                            Name = "Person 103"
                        },
                        new
                        {
                            Id = 104,
                            Name = "Person 104"
                        },
                        new
                        {
                            Id = 105,
                            Name = "Person 105"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
